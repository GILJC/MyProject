정리.
1. 권한 변경 ->
chmod 775 script01

2. 실행방법 -> 단순 이름X -> ./파일이름
./script01
================



셸 스크립트 ~~ 할때는
대문자로 쓰는게 전통.
다들 대문자로 씀.


bash,셸 프로그래밍 할때는 항상 맨 위에 이렇게 쓰는데,
#!/bin/bash


현재 이 스크립트가 bash가 아닐 때에는
bash를 불러와서 실행을 해라     ->  bash shell을 실행한게 다른거라면 bashs hell 에서 실행하라는 의미.

그래서 얘는 써주는게 좋다.

일반적인 주석은 # 하고 쓰면 됨

VAR1=
여기서 space 띄면 안됨. 다 붙여야함.



---script01
#!/bin/bash

# This is variable test

VAR1="Hello, world!"
echo $VAR1
---------  # 단순 문자열 출력

실행 위해, 일단 모드 변경
chmod 775 script01

script01
실행하면 안됨.
PATH에서 찾으면서 내가 실행시킬 파일을 찾음.
근데 찾을 수 없다는거


$PATH
해보면 여기에 없으니 안됨.
그렇다고 파일 하나씩 돌릴때마다, 여기에 등록할 순 없음
-> 실행할때, 컴퓨터에 파일 위치 알려주면 됨

=>
./script01
이러면 실행이 됨' 단순 문자열 출력


---script02
#!/bin/bash

for i in 1 2 3
do
    echo $i
done
------------------------

---script03
#!/bin/bash

for i in $(ls)
do
    echo $i
done
------------------------

---script04
#!/bin/bash

for i in {0..9}
do
    scho $i
done

------------------------


---script05
#!/bin/bash

for i in {0..9..2}  # from 0 to 9, step2
do
    echo $i
done
------------------------


	$0 - 현재 스크립트의 파일명
	$n - 쉘 스크립트 실행 시 주는 인자($1 부터 )
	$# - 스크립트에 제공된 인자의 수
	$* - 스크립트에 제공된 모든 인자
	$@ - $*과 같지만 개별 묶음
	$? - 마지막 명령어 실행 종료 코드
	$$ - 현재 실행되는 쉘스크립트의 PID
	$! - 마지막 백그라운드 명령어의 PID



---script06
#/bin/bash

echo "File Name: $0"
echo "First Parameter: $1"
echo "Second Parameter: $2"
echo "Quoted Values: $@"
echo "Quoted Values: $*"
echo "Total Number of Parameters: $#"
echo "Current shell script PID: $$"
------------------------

script06 -> 이건 실행할때 다음과 같이 실행해보자
[gil@script]./script -6 abc kim 123 school

>>>
[gil@script]./script06 -6 abc kim 123 school
File Name: ./script06
First Parameter: -6
Second Parameter: abc
Quoted Values: -6 abc kim 123 school
Quoted Values: -6 abc kim 123 school
Total Number of Parameters: 5
Current shell script PID: 2464
[gil@script]


이렇게 출력됨.

골뱅이(@)와 별(*)은 차이를 모르겠음.  따로 볼것.

------------------------

---script07  ->  골뱅이(@)와 별(*)
#!/bin/bash

for TOKEN in $*
do
    echo $TOKEN
done
------------------------
>>>
[gil@script][gil@script]./script07 My name is Kate Morgan
My
name
is
Kate
Morgan
[gil@script]

------------------------

---script08  ->  골뱅이(@)와 별(*)
#!/bin/bash

for TOKEN in $@
do
    echo $TOKEN
done
------------------------
[gil@script]./script08 My name is Kate Morgan
My
name
is
Kate
Morgan
[gil@script]
------------------------

---script09
#!/bin/bash

for TOKEN in "$*"
do
    echo $TOKEN
done
------------------------
[gil@script]./script09 My "name is Kate" Morgan
My name is Kate Morgan
[gil@script]


---script10
#!/bin/bash

for TOKEN in "$@"
do
    echo $TOKEN
done
------------------------
[gil@script]./script10 My "name is Kate" Morgan
My
name is Kate
Morgan
[gil@script]



()()()()()()()()
if를 이렇게 씀

if["$#" -lt 1]   <- 전체 개수가 1보다 작으면 = 파라미터를 안주면


---script11
#!/bin/bash

if [ "$#" -lt 1 ]   <-  if 띄고, [ asd ]   <- 괄호 []  사이에도 하나씩 띄어줘야함
then
    echo "$# is illegal number of parameters."
    echo "Usage: $0 [options]"
    exit 1  <-  스크립트 종료
fi

ARGS=("$@")     <-  들어온 인자 배열로 담음
for((c=0;c<$#;c++))
do
    echo "$c th parameter = ${ARGS[$c]}"     <-  이렇게 꺼내옴
done
------------------------
>>>
[gil@script]./script11 java python c++
0 th parameter = java
1 th parameter = python
2 th parameter = c++
[gil@script]

------------------------

































